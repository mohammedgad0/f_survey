# Generated by Django 2.0.5 on 2018-07-25 15:55

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('survey', '0003_auto_20180725_1533'),
    ]

    operations = [
        migrations.CreateModel(
            name='FcpFamilyTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('housing_type', models.FloatField(blank=True, null=True)),
                ('housing_type_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('building_material', models.FloatField(blank=True, null=True)),
                ('building_material_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('housing_space', models.FloatField(blank=True, null=True)),
                ('housing_stay_type', models.FloatField(blank=True, null=True)),
                ('housing_stay_type_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('bed_room_count', models.FloatField(blank=True, null=True)),
                ('other_room_count', models.FloatField(blank=True, null=True)),
                ('kitchen_count', models.FloatField(blank=True, null=True)),
                ('bath_room_count', models.FloatField(blank=True, null=True)),
                ('holding_type', models.FloatField(blank=True, null=True)),
                ('holding_type_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('electric_sources', models.FloatField(blank=True, null=True)),
                ('electric_sources_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('water_sources', models.FloatField(blank=True, null=True)),
                ('water_sources_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('sewage', models.FloatField(blank=True, null=True)),
                ('sewage_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('mobile_count', models.FloatField(blank=True, null=True)),
                ('telephone_count', models.FloatField(blank=True, null=True)),
                ('internet_users_count', models.FloatField(blank=True, null=True)),
                ('internet_connection', models.FloatField(blank=True, null=True)),
                ('car_count', models.FloatField(blank=True, null=True)),
                ('tv_count', models.FloatField(blank=True, null=True)),
                ('income_avg', models.FloatField(blank=True, null=True)),
                ('housing_act_economic', models.FloatField(blank=True, null=True)),
                ('death_status', models.FloatField(blank=True, null=True)),
                ('member_name', models.CharField(blank=True, max_length=250, null=True)),
                ('id_number_member', models.FloatField(blank=True, null=True)),
                ('age', models.FloatField(blank=True, null=True)),
                ('nationality', models.FloatField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=250, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('insert_by', models.FloatField(blank=True, null=True)),
                ('insert_date', models.DateField(blank=True, null=True)),
                ('update_by', models.FloatField(blank=True, null=True)),
                ('update_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fcp_family_tab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenErrorTab',
            fields=[
                ('error_id', models.FloatField(primary_key=True, serialize=False)),
                ('error_code', models.CharField(blank=True, max_length=500, null=True)),
                ('error_type', models.NullBooleanField()),
                ('part_error', models.FloatField(blank=True, null=True)),
                ('table_name', models.CharField(blank=True, max_length=3000, null=True)),
                ('tablet_condition', models.CharField(blank=True, max_length=3000, null=True)),
                ('desktop_condition', models.CharField(blank=True, max_length=3000, null=True)),
                ('message', models.CharField(blank=True, max_length=3000, null=True)),
                ('message2', models.CharField(blank=True, max_length=3000, null=True)),
                ('on_off_tablet', models.NullBooleanField()),
                ('on_off_desktop', models.NullBooleanField()),
                ('colume_related', models.CharField(blank=True, max_length=200, null=True)),
                ('colume_related2', models.CharField(blank=True, max_length=200, null=True)),
                ('colume_related3', models.CharField(blank=True, max_length=200, null=True)),
                ('error_sort', models.FloatField(blank=True, null=True)),
                ('level_flag', models.NullBooleanField()),
                ('rule_desc', models.CharField(blank=True, max_length=3000, null=True)),
                ('col1', models.CharField(blank=True, max_length=1000, null=True)),
                ('col2', models.CharField(blank=True, max_length=1000, null=True)),
                ('col3', models.CharField(blank=True, max_length=1000, null=True)),
                ('insert_date', models.DateField(blank=True, null=True)),
                ('update_date', models.DateField(blank=True, null=True)),
                ('error_apply_id', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gen_error_tab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenPlacesViewTab',
            fields=[
                ('admin', models.IntegerField()),
                ('admin_name', models.CharField(max_length=50)),
                ('region_id', models.FloatField(blank=True, null=True)),
                ('region', models.FloatField(blank=True, null=True)),
                ('region_name', models.CharField(blank=True, max_length=50, null=True)),
                ('region_name_eng', models.CharField(blank=True, max_length=100, null=True)),
                ('center_id', models.FloatField(blank=True, null=True)),
                ('center', models.FloatField()),
                ('center_name', models.CharField(blank=True, max_length=50, null=True)),
                ('center_mgr_name', models.CharField(blank=True, max_length=300, null=True)),
                ('center_mgr_phone', models.BigIntegerField(blank=True, null=True)),
                ('general_notes', models.CharField(blank=True, max_length=500, null=True)),
                ('gps_let', models.CharField(blank=True, max_length=100, null=True)),
                ('gps_lng', models.CharField(blank=True, max_length=100, null=True)),
                ('inspector_notes', models.CharField(blank=True, max_length=500, null=True)),
                ('revision_status', models.NullBooleanField()),
                ('place_id', models.FloatField(primary_key=True, serialize=False)),
                ('city', models.IntegerField(blank=True, null=True)),
                ('place_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sup_city', models.IntegerField(blank=True, null=True)),
                ('sup_city_name', models.CharField(blank=True, max_length=100, null=True)),
                ('place_type', models.FloatField(blank=True, null=True)),
                ('place_location', models.CharField(blank=True, max_length=80, null=True)),
                ('road_type', models.FloatField(blank=True, null=True)),
                ('dir_type', models.FloatField(blank=True, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('n_degree', models.IntegerField(blank=True, null=True)),
                ('n_minute', models.IntegerField(blank=True, null=True)),
                ('n_second', models.IntegerField(blank=True, null=True)),
                ('e_degree', models.IntegerField(blank=True, null=True)),
                ('e_minute', models.IntegerField(blank=True, null=True)),
                ('e_second', models.IntegerField(blank=True, null=True)),
                ('place_max', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gen_places_view_tab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenResearchPeriodTab',
            fields=[
                ('rp_id', models.FloatField(primary_key=True, serialize=False)),
                ('rp_name', models.CharField(max_length=600)),
                ('rp_short_name', models.CharField(blank=True, max_length=200, null=True)),
                ('rp_start_date', models.DateField(blank=True, null=True)),
                ('rp_end_date', models.DateField(blank=True, null=True)),
                ('rb_review_end_date', models.DateField(blank=True, null=True)),
                ('mandate_date', models.DateField(blank=True, null=True)),
                ('mandate_start_date', models.DateField(blank=True, null=True)),
                ('mandate_end_date', models.DateField(blank=True, null=True)),
                ('first_signature_name', models.CharField(blank=True, max_length=300, null=True)),
                ('first_signature_job', models.CharField(blank=True, max_length=300, null=True)),
                ('second_signature_name', models.CharField(blank=True, max_length=300, null=True)),
                ('second_signature_job', models.CharField(blank=True, max_length=300, null=True)),
                ('rp_status', models.FloatField()),
                ('quiz_id', models.FloatField(blank=True, null=True)),
                ('error_status', models.FloatField(blank=True, null=True)),
                ('error_last_date', models.DateField(blank=True, null=True)),
                ('count_census_area', models.FloatField(blank=True, null=True)),
                ('count_family', models.FloatField(blank=True, null=True)),
                ('nationality_cat', models.FloatField(blank=True, null=True)),
                ('sample_status', models.FloatField(blank=True, null=True)),
                ('sample_sys_status', models.FloatField(blank=True, null=True)),
                ('survey_type', models.FloatField(blank=True, null=True)),
                ('bi_data_status', models.FloatField(blank=True, null=True)),
                ('member_table_name', models.CharField(blank=True, max_length=350, null=True)),
            ],
            options={
                'db_table': 'gen_research_period_tab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenSampleTab',
            fields=[
                ('sample_id', models.FloatField(primary_key=True, serialize=False)),
                ('family_id', models.FloatField(blank=True, null=True)),
                ('census_area', models.CharField(blank=True, max_length=200, null=True)),
                ('family_no', models.FloatField(blank=True, null=True)),
                ('check_dig', models.FloatField(blank=True, null=True)),
                ('hara', models.FloatField(blank=True, null=True)),
                ('section_no', models.FloatField(blank=True, null=True)),
                ('block_no', models.FloatField(blank=True, null=True)),
                ('build_no', models.FloatField(blank=True, null=True)),
                ('unit_no', models.FloatField(blank=True, null=True)),
                ('sample_month', models.IntegerField(blank=True, null=True)),
                ('stratumno', models.CharField(blank=True, max_length=200, null=True)),
                ('hara_aname', models.CharField(blank=True, max_length=100, null=True)),
                ('head_family', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_member_tot', models.CharField(blank=True, max_length=255, null=True)),
                ('lat_y', models.FloatField(blank=True, null=True)),
                ('lng_x', models.FloatField(blank=True, null=True)),
                ('sample_status', models.FloatField(blank=True, null=True)),
                ('sample_use_status', models.FloatField(blank=True, null=True)),
                ('data_giver_name', models.CharField(blank=True, max_length=250, null=True)),
                ('data_giver_phone', models.CharField(blank=True, max_length=250, null=True)),
                ('data_giver_email', models.CharField(blank=True, max_length=250, null=True)),
                ('visit_status', models.FloatField(blank=True, null=True)),
                ('visit_status_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('lat_y_new', models.FloatField(blank=True, null=True)),
                ('lng_x_new', models.FloatField(blank=True, null=True)),
                ('no_of_member', models.FloatField(blank=True, null=True)),
                ('t_start_date', models.DateField(blank=True, null=True)),
                ('t_end_date', models.DateField(blank=True, null=True)),
                ('t_update_date', models.DateField(blank=True, null=True)),
                ('family_status', models.FloatField(blank=True, null=True)),
                ('family_locked', models.FloatField(blank=True, null=True)),
                ('desktop_error_status', models.IntegerField(blank=True, null=True)),
                ('desktop_warning_status', models.IntegerField(blank=True, null=True)),
                ('sms_flag', models.NullBooleanField()),
                ('insert_by', models.FloatField(blank=True, null=True)),
                ('insert_date', models.DateField(blank=True, null=True)),
                ('update_by', models.FloatField(blank=True, null=True)),
                ('update_date', models.DateField(blank=True, null=True)),
                ('contact_status', models.NullBooleanField()),
                ('place_id_temp', models.FloatField(blank=True, null=True)),
                ('place_id_temp_2', models.FloatField(blank=True, null=True)),
                ('family_phone_no', models.FloatField(blank=True, null=True)),
                ('sample_member_name', models.CharField(blank=True, max_length=350, null=True)),
                ('building_type_id', models.FloatField(blank=True, null=True)),
                ('unit_type_id', models.FloatField(blank=True, null=True)),
                ('family_nat_id', models.FloatField(blank=True, null=True)),
                ('weight_1', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gen_sample_tab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenWorkAreaInfTab',
            fields=[
                ('w_a_id', models.FloatField(primary_key=True, serialize=False)),
                ('rp_id', models.FloatField(blank=True, null=True)),
                ('supervisor', models.IntegerField(blank=True, null=True)),
                ('vice', models.FloatField(blank=True, null=True)),
                ('associate', models.IntegerField(blank=True, null=True)),
                ('inspector', models.IntegerField(blank=True, null=True)),
                ('controller', models.IntegerField(blank=True, null=True)),
                ('researcher', models.IntegerField(blank=True, null=True)),
                ('status', models.FloatField(blank=True, null=True)),
                ('insert_by', models.FloatField(blank=True, null=True)),
                ('insert_date', models.DateField(blank=True, null=True)),
                ('update_by', models.FloatField(blank=True, null=True)),
                ('update_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gen_work_area_inf_tab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenWorkTypeTab',
            fields=[
                ('work_type_id', models.FloatField(primary_key=True, serialize=False)),
                ('work_type_desc', models.CharField(max_length=1000)),
                ('seq_no', models.FloatField()),
                ('active_flag', models.FloatField()),
                ('ref_work_type_id', models.FloatField(blank=True, null=True)),
                ('multi_admin_status', models.NullBooleanField()),
                ('main_w_a_status', models.NullBooleanField()),
                ('cand_status', models.FloatField(blank=True, null=True)),
                ('ecproj_work_type_id', models.CharField(blank=True, max_length=5, null=True)),
                ('group_support', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gen_work_type_tab',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='genlookuplistview',
            name='db',
        ),
        migrations.AlterField(
            model_name='genlookuplistview',
            name='rp_id',
            field=models.FloatField(blank=True, null=True, primary_key=True, serialize=False),
        ),
        migrations.AlterModelTable(
            name='genlookuplistview',
            table='gen_lookup_list_view',
        ),
    ]
